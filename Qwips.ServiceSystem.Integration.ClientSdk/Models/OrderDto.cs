// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Qwips.ServiceSystem.Integration.ClientSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class OrderDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The ContactEmail property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactEmail { get; set; }
#nullable restore
#else
        public string ContactEmail { get; set; }
#endif
        /// <summary>The ContactMobile property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactMobile { get; set; }
#nullable restore
#else
        public string ContactMobile { get; set; }
#endif
        /// <summary>The ContactName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContactName { get; set; }
#nullable restore
#else
        public string ContactName { get; set; }
#endif
        /// <summary>The CreatedDate property</summary>
        public DateTimeOffset? CreatedDate { get; set; }
        /// <summary>The CustomerComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerComment { get; set; }
#nullable restore
#else
        public string CustomerComment { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressCity property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressCity { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressCity { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressCountry property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressCountry { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressCountry { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressStreet property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressStreet { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressStreet { get; set; }
#endif
        /// <summary>The CustomerDeliveryAdressZip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerDeliveryAdressZip { get; set; }
#nullable restore
#else
        public string CustomerDeliveryAdressZip { get; set; }
#endif
        /// <summary>The CustomerMailAdressCity property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerMailAdressCity { get; set; }
#nullable restore
#else
        public string CustomerMailAdressCity { get; set; }
#endif
        /// <summary>The CustomerMailAdressCountry property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerMailAdressCountry { get; set; }
#nullable restore
#else
        public string CustomerMailAdressCountry { get; set; }
#endif
        /// <summary>The CustomerMailAdressStreet property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerMailAdressStreet { get; set; }
#nullable restore
#else
        public string CustomerMailAdressStreet { get; set; }
#endif
        /// <summary>The CustomerMailAdressZip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerMailAdressZip { get; set; }
#nullable restore
#else
        public string CustomerMailAdressZip { get; set; }
#endif
        /// <summary>The CustomerName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerName { get; set; }
#nullable restore
#else
        public string CustomerName { get; set; }
#endif
        /// <summary>The CustomerOrganisationNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerOrganisationNumber { get; set; }
#nullable restore
#else
        public string CustomerOrganisationNumber { get; set; }
#endif
        /// <summary>The CustomerReferenceName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerReferenceName { get; set; }
#nullable restore
#else
        public string CustomerReferenceName { get; set; }
#endif
        /// <summary>The DeliveryDate property</summary>
        public DateTimeOffset? DeliveryDate { get; set; }
        /// <summary>The DepartmentId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DepartmentId { get; set; }
#nullable restore
#else
        public string DepartmentId { get; set; }
#endif
        /// <summary>The EmploymentId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmploymentId { get; set; }
#nullable restore
#else
        public string EmploymentId { get; set; }
#endif
        /// <summary>The Id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The InvoiceComment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceComment { get; set; }
#nullable restore
#else
        public string InvoiceComment { get; set; }
#endif
        /// <summary>The InvoiceDate property</summary>
        public DateTimeOffset? InvoiceDate { get; set; }
        /// <summary>The InvoiceDueDate property</summary>
        public DateTimeOffset? InvoiceDueDate { get; set; }
        /// <summary>The InvoiceId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceId { get; set; }
#nullable restore
#else
        public string InvoiceId { get; set; }
#endif
        /// <summary>The InvoiceKid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceKid { get; set; }
#nullable restore
#else
        public string InvoiceKid { get; set; }
#endif
        /// <summary>The InvoiceReference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceReference { get; set; }
#nullable restore
#else
        public string InvoiceReference { get; set; }
#endif
        /// <summary>The InvoiceReference2 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceReference2 { get; set; }
#nullable restore
#else
        public string InvoiceReference2 { get; set; }
#endif
        /// <summary>The InvoiceReference3 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceReference3 { get; set; }
#nullable restore
#else
        public string InvoiceReference3 { get; set; }
#endif
        /// <summary>The NoInvoice property</summary>
        public bool? NoInvoice { get; set; }
        /// <summary>The OrderReference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrderReference { get; set; }
#nullable restore
#else
        public string OrderReference { get; set; }
#endif
        /// <summary>The OrderStatus property</summary>
        public int? OrderStatus { get; set; }
        /// <summary>The OurRef property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OurRef { get; set; }
#nullable restore
#else
        public string OurRef { get; set; }
#endif
        /// <summary>The ReadyToInvoice property</summary>
        public bool? ReadyToInvoice { get; set; }
        /// <summary>The TotalAmountExclVat property</summary>
        public double? TotalAmountExclVat { get; set; }
        /// <summary>The TotalAmountPartExclVat property</summary>
        public double? TotalAmountPartExclVat { get; set; }
        /// <summary>The TotalAmountVat property</summary>
        public double? TotalAmountVat { get; set; }
        /// <summary>The TotalAmountWorkExclVat property</summary>
        public double? TotalAmountWorkExclVat { get; set; }
        /// <summary>The TotalDiscount property</summary>
        public double? TotalDiscount { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Qwips.ServiceSystem.Integration.ClientSdk.Models.OrderDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Qwips.ServiceSystem.Integration.ClientSdk.Models.OrderDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Qwips.ServiceSystem.Integration.ClientSdk.Models.OrderDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "ContactEmail", n => { ContactEmail = n.GetStringValue(); } },
                { "ContactMobile", n => { ContactMobile = n.GetStringValue(); } },
                { "ContactName", n => { ContactName = n.GetStringValue(); } },
                { "CreatedDate", n => { CreatedDate = n.GetDateTimeOffsetValue(); } },
                { "CustomerComment", n => { CustomerComment = n.GetStringValue(); } },
                { "CustomerDeliveryAdressCity", n => { CustomerDeliveryAdressCity = n.GetStringValue(); } },
                { "CustomerDeliveryAdressCountry", n => { CustomerDeliveryAdressCountry = n.GetStringValue(); } },
                { "CustomerDeliveryAdressStreet", n => { CustomerDeliveryAdressStreet = n.GetStringValue(); } },
                { "CustomerDeliveryAdressZip", n => { CustomerDeliveryAdressZip = n.GetStringValue(); } },
                { "CustomerMailAdressCity", n => { CustomerMailAdressCity = n.GetStringValue(); } },
                { "CustomerMailAdressCountry", n => { CustomerMailAdressCountry = n.GetStringValue(); } },
                { "CustomerMailAdressStreet", n => { CustomerMailAdressStreet = n.GetStringValue(); } },
                { "CustomerMailAdressZip", n => { CustomerMailAdressZip = n.GetStringValue(); } },
                { "CustomerName", n => { CustomerName = n.GetStringValue(); } },
                { "CustomerOrganisationNumber", n => { CustomerOrganisationNumber = n.GetStringValue(); } },
                { "CustomerReferenceName", n => { CustomerReferenceName = n.GetStringValue(); } },
                { "DeliveryDate", n => { DeliveryDate = n.GetDateTimeOffsetValue(); } },
                { "DepartmentId", n => { DepartmentId = n.GetStringValue(); } },
                { "EmploymentId", n => { EmploymentId = n.GetStringValue(); } },
                { "Id", n => { Id = n.GetStringValue(); } },
                { "InvoiceComment", n => { InvoiceComment = n.GetStringValue(); } },
                { "InvoiceDate", n => { InvoiceDate = n.GetDateTimeOffsetValue(); } },
                { "InvoiceDueDate", n => { InvoiceDueDate = n.GetDateTimeOffsetValue(); } },
                { "InvoiceId", n => { InvoiceId = n.GetStringValue(); } },
                { "InvoiceKid", n => { InvoiceKid = n.GetStringValue(); } },
                { "InvoiceReference", n => { InvoiceReference = n.GetStringValue(); } },
                { "InvoiceReference2", n => { InvoiceReference2 = n.GetStringValue(); } },
                { "InvoiceReference3", n => { InvoiceReference3 = n.GetStringValue(); } },
                { "NoInvoice", n => { NoInvoice = n.GetBoolValue(); } },
                { "OrderReference", n => { OrderReference = n.GetStringValue(); } },
                { "OrderStatus", n => { OrderStatus = n.GetIntValue(); } },
                { "OurRef", n => { OurRef = n.GetStringValue(); } },
                { "ReadyToInvoice", n => { ReadyToInvoice = n.GetBoolValue(); } },
                { "TotalAmountExclVat", n => { TotalAmountExclVat = n.GetDoubleValue(); } },
                { "TotalAmountPartExclVat", n => { TotalAmountPartExclVat = n.GetDoubleValue(); } },
                { "TotalAmountVat", n => { TotalAmountVat = n.GetDoubleValue(); } },
                { "TotalAmountWorkExclVat", n => { TotalAmountWorkExclVat = n.GetDoubleValue(); } },
                { "TotalDiscount", n => { TotalDiscount = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("ContactEmail", ContactEmail);
            writer.WriteStringValue("ContactMobile", ContactMobile);
            writer.WriteStringValue("ContactName", ContactName);
            writer.WriteDateTimeOffsetValue("CreatedDate", CreatedDate);
            writer.WriteStringValue("CustomerComment", CustomerComment);
            writer.WriteStringValue("CustomerDeliveryAdressCity", CustomerDeliveryAdressCity);
            writer.WriteStringValue("CustomerDeliveryAdressCountry", CustomerDeliveryAdressCountry);
            writer.WriteStringValue("CustomerDeliveryAdressStreet", CustomerDeliveryAdressStreet);
            writer.WriteStringValue("CustomerDeliveryAdressZip", CustomerDeliveryAdressZip);
            writer.WriteStringValue("CustomerMailAdressCity", CustomerMailAdressCity);
            writer.WriteStringValue("CustomerMailAdressCountry", CustomerMailAdressCountry);
            writer.WriteStringValue("CustomerMailAdressStreet", CustomerMailAdressStreet);
            writer.WriteStringValue("CustomerMailAdressZip", CustomerMailAdressZip);
            writer.WriteStringValue("CustomerName", CustomerName);
            writer.WriteStringValue("CustomerOrganisationNumber", CustomerOrganisationNumber);
            writer.WriteStringValue("CustomerReferenceName", CustomerReferenceName);
            writer.WriteDateTimeOffsetValue("DeliveryDate", DeliveryDate);
            writer.WriteStringValue("DepartmentId", DepartmentId);
            writer.WriteStringValue("EmploymentId", EmploymentId);
            writer.WriteStringValue("Id", Id);
            writer.WriteStringValue("InvoiceComment", InvoiceComment);
            writer.WriteDateTimeOffsetValue("InvoiceDate", InvoiceDate);
            writer.WriteDateTimeOffsetValue("InvoiceDueDate", InvoiceDueDate);
            writer.WriteStringValue("InvoiceId", InvoiceId);
            writer.WriteStringValue("InvoiceKid", InvoiceKid);
            writer.WriteStringValue("InvoiceReference", InvoiceReference);
            writer.WriteStringValue("InvoiceReference2", InvoiceReference2);
            writer.WriteStringValue("InvoiceReference3", InvoiceReference3);
            writer.WriteBoolValue("NoInvoice", NoInvoice);
            writer.WriteStringValue("OrderReference", OrderReference);
            writer.WriteIntValue("OrderStatus", OrderStatus);
            writer.WriteStringValue("OurRef", OurRef);
            writer.WriteBoolValue("ReadyToInvoice", ReadyToInvoice);
            writer.WriteDoubleValue("TotalAmountExclVat", TotalAmountExclVat);
            writer.WriteDoubleValue("TotalAmountPartExclVat", TotalAmountPartExclVat);
            writer.WriteDoubleValue("TotalAmountVat", TotalAmountVat);
            writer.WriteDoubleValue("TotalAmountWorkExclVat", TotalAmountWorkExclVat);
            writer.WriteDoubleValue("TotalDiscount", TotalDiscount);
        }
    }
}
#pragma warning restore CS0618
