// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Qwips.ServiceSystem.Integration.ClientSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AddPartOrderIntegrationDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The ArticleDescription property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ArticleDescription { get; set; }
#nullable restore
#else
        public string ArticleDescription { get; set; }
#endif
        /// <summary>The ArticleNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ArticleNumber { get; set; }
#nullable restore
#else
        public string ArticleNumber { get; set; }
#endif
        /// <summary>The Discount property</summary>
        public double? Discount { get; set; }
        /// <summary>The JobId property</summary>
        public int? JobId { get; set; }
        /// <summary>The Price property</summary>
        public double? Price { get; set; }
        /// <summary>The Quantity property</summary>
        public double? Quantity { get; set; }
        /// <summary>The SendVendorOrderEmailToAddress property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SendVendorOrderEmailToAddress { get; set; }
#nullable restore
#else
        public string SendVendorOrderEmailToAddress { get; set; }
#endif
        /// <summary>The SendWarehouseEmailToAddress property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SendWarehouseEmailToAddress { get; set; }
#nullable restore
#else
        public string SendWarehouseEmailToAddress { get; set; }
#endif
        /// <summary>The StoreId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StoreId { get; set; }
#nullable restore
#else
        public string StoreId { get; set; }
#endif
        /// <summary>The StoreLocation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StoreLocation { get; set; }
#nullable restore
#else
        public string StoreLocation { get; set; }
#endif
        /// <summary>The StoreLocationId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StoreLocationId { get; set; }
#nullable restore
#else
        public string StoreLocationId { get; set; }
#endif
        /// <summary>The UserId property</summary>
        public int? UserId { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Qwips.ServiceSystem.Integration.ClientSdk.Models.AddPartOrderIntegrationDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Qwips.ServiceSystem.Integration.ClientSdk.Models.AddPartOrderIntegrationDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Qwips.ServiceSystem.Integration.ClientSdk.Models.AddPartOrderIntegrationDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "ArticleDescription", n => { ArticleDescription = n.GetStringValue(); } },
                { "ArticleNumber", n => { ArticleNumber = n.GetStringValue(); } },
                { "Discount", n => { Discount = n.GetDoubleValue(); } },
                { "JobId", n => { JobId = n.GetIntValue(); } },
                { "Price", n => { Price = n.GetDoubleValue(); } },
                { "Quantity", n => { Quantity = n.GetDoubleValue(); } },
                { "SendVendorOrderEmailToAddress", n => { SendVendorOrderEmailToAddress = n.GetStringValue(); } },
                { "SendWarehouseEmailToAddress", n => { SendWarehouseEmailToAddress = n.GetStringValue(); } },
                { "StoreId", n => { StoreId = n.GetStringValue(); } },
                { "StoreLocation", n => { StoreLocation = n.GetStringValue(); } },
                { "StoreLocationId", n => { StoreLocationId = n.GetStringValue(); } },
                { "UserId", n => { UserId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("ArticleDescription", ArticleDescription);
            writer.WriteStringValue("ArticleNumber", ArticleNumber);
            writer.WriteDoubleValue("Discount", Discount);
            writer.WriteIntValue("JobId", JobId);
            writer.WriteDoubleValue("Price", Price);
            writer.WriteDoubleValue("Quantity", Quantity);
            writer.WriteStringValue("SendVendorOrderEmailToAddress", SendVendorOrderEmailToAddress);
            writer.WriteStringValue("SendWarehouseEmailToAddress", SendWarehouseEmailToAddress);
            writer.WriteStringValue("StoreId", StoreId);
            writer.WriteStringValue("StoreLocation", StoreLocation);
            writer.WriteStringValue("StoreLocationId", StoreLocationId);
            writer.WriteIntValue("UserId", UserId);
        }
    }
}
#pragma warning restore CS0618
